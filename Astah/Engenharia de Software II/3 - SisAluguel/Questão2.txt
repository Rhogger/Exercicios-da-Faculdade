O SisAluguel é um aplicativo de gestão de imóveis alugados. Após realizar login no sistema por  meio de nome de usuário e senha, o proprietário de imóveis cadastra seus imóveis a alugar no  aplicativo. Um imóvel contém endereço, apelido, descrição e preço de aluguel. O proprietário  também consegue visualizar propostas feitas por pessoas que desejam alugar um de seus  imóveis, os dados dos locatários de seus imóveis, solicitar os serviços de um cobrador também  cadastrado no sistema e mudar o status de um imóvel de “disponível” para “indisponível". Um  cliente é uma pessoa que está cadastrada no sistema e pode ver imóveis disponíveis para aluguel  em uma determinada área, oferecer propostas para proprietários e pesquisar imóveis de acordo  com preço, número de quartos e tipo de imóvel (barracão, apartamento, casa). Ao oferecer uma  proposta, o sistema verifica automaticamente a situação do cliente junto ao Serviço de Proteção  ao Crédito. Um locatário é uma pessoa que está ocupando um imóvel cadastrado no aplicativo.  O locatário pode visualizar seu contrato de locação, enviar mensagem para o proprietário,  solicitar reparos no imóvel, visualizar aluguéis vencidos e a vencer e histórico de pagamentos.  Um cobrador pode visualizar cobranças a efetuar, solicitar negativação do CPF do locatário em  caso de aluguéis vencidos e não pagos, enviar mensagem para o locatário e para o proprietário  e gerar cobrança judicial. 
Crie o diagrama de caso de uso do sistema descrito acima. Use as dicas da página anterior e  tente seguir os passos a seguir: 

1 – Identificar e nomear quantos e quais são os atores 

2 – Identificar quais as ações de cada ator no sistema 

3 – Identificar ações repetidas. Isso pode indicar generalização. Exemplo: Cliente faz login e  Gerente faz login, logo a ação “fazer login” pode ser generalizada (pode ser criado um ator  único que acessa a ação “fazer login” e dele podem ser derivados outros usando a notação  adequada) 

4 – Identificar se é possível agrupar os casos de uso em módulos (retângulos) 

5 – Identificar se um caso de uso dispara alguma funcionalidade (notação <<extend>> ou  <<include>>)